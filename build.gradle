buildscript {
    ext {
        springBootVersion = '1.3.2.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://github.com/paulsmelser/maven-repo/raw/master/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'org.hidetake.ssh' version '1.1.4'
    id "com.moowork.node" version "0.12"
    id "com.moowork.gulp" version "0.12"
}

apply plugin: 'spring-boot'


jar {
    baseName = 'oozie-console'
}

springBoot {
    executable = true
}

repositories {
    mavenCentral()
    maven{
        url "https://github.com/paulsmelser/maven-repo/raw/master/"
    }
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile project(":oozie-rest-client")
    compile project(":oozie-web")
    compile project(":oozie-application")
}

allprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
        maven{
                url "https://github.com/paulsmelser/maven-repo/raw/master/"
        }
    }

    dependencies{
        compile(
                [group:'org.springframework.boot',  name:'spring-boot-starter-web'],
                [group:'org.springframework.boot',  name:'spring-boot-starter-actuator'],
                [group:'org.springframework.boot',  name:'spring-boot-starter-thymeleaf'],
                [group:'com.thoughtworks.xstream',  name:'xstream',                         version: '1.4.7'],
                [group:'com.sun.jersey',            name:'jersey-client',                   version: '1.18.3'],
                [group:'com.smelser',               name:'simple-mapper',                   version: '1.0.3'],
                [group:'com.owlike',                name:'genson',                          version: '0.99'],
                [group:'com.google.code.gson',      name:'gson',                            version: '2.3.1']
        )

        testCompile(
                [group: 'org.springframework.boot', name:'spring-boot-starter-test'],
                [group: 'junit',                    name:'junit'],
                [group: 'org.mockito',              name:'mockito-core']
        )
    }

    tasks.withType(JavaCompile) {
        options.incremental = true
    }
}

bootRun {
    main = 'com.smelser.oozie.Application'
    systemProperties = [
            'spring.profiles.active': "dev"
    ]
}



subprojects {
    group = 'com.smelser.oozie'
    version = '1.0.0'
}

remotes {
    digitalocean {
        host = '45.55.154.254'
        user = 'root'
        identity = file("/Users/psmelser/.ssh/oozie.pub")
    }
}

task deploy << {
    ssh.run {
        session(remotes.digitalocean) {
            put from: jar.archivePath, into: '/root/oozie'
            execute "sudo java -jar /root/oozie/oozie-console-${project.version} &"
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}

def generatedWebResources = "${buildDir}/generated-web-resources"
sourceSets {
    main {
        output.dir(generatedWebResources, builtBy: 'gulp_build')
    }
}

// configure gradle-node-plugin
node {
    version = '6.2.0'
    npmVersion = '3.9.2'
    download = true
    workDir = file("${project.projectDir}/oozie-web/src/main/web/node")
    nodeModulesDir = file("${project.projectDir}/oozie-web/src/main/web")
}

// configure gradle-grunt-plugin
gulp {
    workDir = file("${project.projectDir}/oozie-web/src/main/web");
    colors = true
    bufferOutput = false
}

task npmClean(type: Delete) {
    final def webDir = "${rootDir}/oozie-web/src/main/web"
    delete "${webDir}/node"
    delete "${webDir}/node_modules"
    delete "${webDir}/typings"
}

compileJava.dependsOn(processResources);
// build front-end before making jar
processResources.dependsOn(npmInstall)
npmInstall.finalizedBy(gulp_build)

// run npmClean before clean
clean.dependsOn(npmClean)
